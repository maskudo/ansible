- name: Clone asdf-vm
  ansible.builtin.git:
    repo: "https://github.com/asdf-vm/asdf.git"
    dest: "{{ ansible_env.HOME }}/.asdf"
    version: "v0.11.3"
  tags:
    - install
    - programming
- name: Source .bashrc
  ansible.builtin.shell: ". $HOME/.bashrc"
  tags:
    - install
    - programming

# golang
- name: Add golang plugin to asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf plugin-add golang"
  register: golang_add
  failed_when: golang_add == 2
  tags:
    - install
    - programming
- name: Install golang latest with asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf install golang latest"
  tags:
    - install
    - programming
- name: Set global version for golang to latest
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf global golang latest"
  tags:
    - install
    - programming

#nodejs
- name: Add nodejs plugin to asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf plugin-add nodejs"
  register: nodejs_add
  failed_when: nodejs_add == 2
  tags:
    - install
    - programming
- name: Install nodejs latest with asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf install nodejs latest"
  tags:
    - install
    - programming
- name: Set global version for nodejs to latest
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf global nodejs latest"
  tags:
    - install
    - programming

#rust
- name: Add rust plugin to asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf plugin-add rust https://github.com/code-lever/asdf-rust.git"
  register: rust_add
  failed_when: rust_add == 2
  tags:
    - install
    - programming
- name: Install rust latest with asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf install rust latest"
  tags:
    - install
    - programming
- name: Set global version for rust to latest
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf global rust latest"
  tags:
    - install
    - programming

#docker
- name: Install docker dependency
  become: true
  ansible.builtin.apt:
    name: "{{item}}"
    state: present
    update_cache: true
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
  tags:
    - install
    - programming
    - docker
- name: Add docker GPG key
  become: true
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags:
    - install
    - programming
    - docker
- name: Add docker repository to apt
  become: true
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present
  tags:
    - install
    - programming
    - docker
- name: install docker
  become: true
  ansible.builtin.apt:
    name: "{{item}}"
    state: latest
    update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-compose-plugin
  tags:
    - install
    - programming
    - docker
- name: Enable docker
  become: true
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  tags:
    - install
    - programming
    - docker

- name: Ensure the Docker group exists
  ansible.builtin.group:
    name: docker
    state: present
  tags:
    - install
    - programming
    - docker

- name: Add the current user "{{ lookup('env', 'USER') }}" to the Docker group
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups: docker
    append: true
  become: true
  tags:
    - install
    - programming
    - docker

#neovim
- name: Add neovim plugin to asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf plugin-add neovim"
  register: neovim_add
  failed_when: neovim_add== 2
  tags:
    - install
    - programming
- name: Install neovim latest with asdf
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf install neovim latest"
  tags:
    - install
    - programming
- name: Set global version for neovim to latest
  ansible.builtin.shell: "${HOME}/.asdf/bin/asdf global neovim latest"
  tags:
    - install
    - programming
